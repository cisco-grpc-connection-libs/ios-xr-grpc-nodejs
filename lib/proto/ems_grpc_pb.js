/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.CliConfigArgs', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.CliConfigReply', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.CommitArgs', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.CommitMsg', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.CommitReplaceReply', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.CommitReply', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.CommitResult', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.ConfigArgs', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.ConfigGetArgs', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.ConfigGetReply', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.ConfigReply', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.CreateSubsArgs', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.CreateSubsReply', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.DiscardChangesReply', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.GetOperArgs', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.GetOperReply', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.ShowCmdArgs', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply', null, global);
goog.exportSymbol('proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.ConfigGetArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.ConfigGetArgs.displayName = 'proto.IOSXRExtensibleManagabilityService.ConfigGetArgs';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.ConfigGetArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.ConfigGetArgs} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqid: msg.getReqid(),
    yangpathjson: msg.getYangpathjson()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.ConfigGetArgs}
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.ConfigGetArgs;
  return proto.IOSXRExtensibleManagabilityService.ConfigGetArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.ConfigGetArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.ConfigGetArgs}
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReqid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setYangpathjson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.ConfigGetArgs} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetArgs.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetArgs.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getReqid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getYangpathjson();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.ConfigGetArgs} The clone.
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetArgs.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.ConfigGetArgs} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 ReqId = 1;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetArgs.prototype.getReqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.ConfigGetArgs.prototype.setReqid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string yangpathjson = 2;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetArgs.prototype.getYangpathjson = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.ConfigGetArgs.prototype.setYangpathjson = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.ConfigGetReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.ConfigGetReply.displayName = 'proto.IOSXRExtensibleManagabilityService.ConfigGetReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetReply.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.ConfigGetReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.ConfigGetReply} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resreqid: msg.getResreqid(),
    yangjson: msg.getYangjson(),
    errors: msg.getErrors()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.ConfigGetReply}
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.ConfigGetReply;
  return proto.IOSXRExtensibleManagabilityService.ConfigGetReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.ConfigGetReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.ConfigGetReply}
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setResreqid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setYangjson(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.ConfigGetReply} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetReply.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetReply.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getResreqid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getYangjson();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getErrors();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.ConfigGetReply} The clone.
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetReply.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.ConfigGetReply} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 ResReqId = 1;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetReply.prototype.getResreqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.ConfigGetReply.prototype.setResreqid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string yangjson = 2;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetReply.prototype.getYangjson = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.ConfigGetReply.prototype.setYangjson = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string errors = 3;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.ConfigGetReply.prototype.getErrors = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.ConfigGetReply.prototype.setErrors = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.GetOperArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.GetOperArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.GetOperArgs.displayName = 'proto.IOSXRExtensibleManagabilityService.GetOperArgs';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.GetOperArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.GetOperArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.GetOperArgs} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.GetOperArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqid: msg.getReqid(),
    yangpathjson: msg.getYangpathjson()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.GetOperArgs}
 */
proto.IOSXRExtensibleManagabilityService.GetOperArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.GetOperArgs;
  return proto.IOSXRExtensibleManagabilityService.GetOperArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.GetOperArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.GetOperArgs}
 */
proto.IOSXRExtensibleManagabilityService.GetOperArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReqid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setYangpathjson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.GetOperArgs} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.GetOperArgs.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.GetOperArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.GetOperArgs.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getReqid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getYangpathjson();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.GetOperArgs} The clone.
 */
proto.IOSXRExtensibleManagabilityService.GetOperArgs.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.GetOperArgs} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 ReqId = 1;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.GetOperArgs.prototype.getReqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.GetOperArgs.prototype.setReqid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string yangpathjson = 2;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.GetOperArgs.prototype.getYangpathjson = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.GetOperArgs.prototype.setYangpathjson = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.GetOperReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.GetOperReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.GetOperReply.displayName = 'proto.IOSXRExtensibleManagabilityService.GetOperReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.GetOperReply.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.GetOperReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.GetOperReply} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.GetOperReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resreqid: msg.getResreqid(),
    yangjson: msg.getYangjson(),
    errors: msg.getErrors()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.GetOperReply}
 */
proto.IOSXRExtensibleManagabilityService.GetOperReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.GetOperReply;
  return proto.IOSXRExtensibleManagabilityService.GetOperReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.GetOperReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.GetOperReply}
 */
proto.IOSXRExtensibleManagabilityService.GetOperReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setResreqid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setYangjson(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.GetOperReply} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.GetOperReply.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.GetOperReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.GetOperReply.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getResreqid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getYangjson();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getErrors();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.GetOperReply} The clone.
 */
proto.IOSXRExtensibleManagabilityService.GetOperReply.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.GetOperReply} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 ResReqId = 1;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.GetOperReply.prototype.getResreqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.GetOperReply.prototype.setResreqid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string yangjson = 2;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.GetOperReply.prototype.getYangjson = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.GetOperReply.prototype.setYangjson = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string errors = 3;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.GetOperReply.prototype.getErrors = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.GetOperReply.prototype.setErrors = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.ConfigArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.ConfigArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.ConfigArgs.displayName = 'proto.IOSXRExtensibleManagabilityService.ConfigArgs';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.ConfigArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.ConfigArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.ConfigArgs} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.ConfigArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqid: msg.getReqid(),
    yangjson: msg.getYangjson()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.ConfigArgs}
 */
proto.IOSXRExtensibleManagabilityService.ConfigArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.ConfigArgs;
  return proto.IOSXRExtensibleManagabilityService.ConfigArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.ConfigArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.ConfigArgs}
 */
proto.IOSXRExtensibleManagabilityService.ConfigArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReqid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setYangjson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.ConfigArgs} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.ConfigArgs.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.ConfigArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.ConfigArgs.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getReqid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getYangjson();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.ConfigArgs} The clone.
 */
proto.IOSXRExtensibleManagabilityService.ConfigArgs.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.ConfigArgs} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 ReqId = 1;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.ConfigArgs.prototype.getReqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.ConfigArgs.prototype.setReqid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string yangjson = 2;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.ConfigArgs.prototype.getYangjson = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.ConfigArgs.prototype.setYangjson = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.ConfigReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.ConfigReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.ConfigReply.displayName = 'proto.IOSXRExtensibleManagabilityService.ConfigReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.ConfigReply.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.ConfigReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.ConfigReply} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.ConfigReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resreqid: msg.getResreqid(),
    errors: msg.getErrors()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.ConfigReply}
 */
proto.IOSXRExtensibleManagabilityService.ConfigReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.ConfigReply;
  return proto.IOSXRExtensibleManagabilityService.ConfigReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.ConfigReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.ConfigReply}
 */
proto.IOSXRExtensibleManagabilityService.ConfigReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setResreqid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.ConfigReply} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.ConfigReply.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.ConfigReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.ConfigReply.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getResreqid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getErrors();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.ConfigReply} The clone.
 */
proto.IOSXRExtensibleManagabilityService.ConfigReply.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.ConfigReply} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 ResReqId = 1;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.ConfigReply.prototype.getResreqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.ConfigReply.prototype.setResreqid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string errors = 2;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.ConfigReply.prototype.getErrors = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.ConfigReply.prototype.setErrors = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.CliConfigArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.CliConfigArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.CliConfigArgs.displayName = 'proto.IOSXRExtensibleManagabilityService.CliConfigArgs';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CliConfigArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.CliConfigArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.CliConfigArgs} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CliConfigArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqid: msg.getReqid(),
    cli: msg.getCli()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.CliConfigArgs}
 */
proto.IOSXRExtensibleManagabilityService.CliConfigArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.CliConfigArgs;
  return proto.IOSXRExtensibleManagabilityService.CliConfigArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.CliConfigArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.CliConfigArgs}
 */
proto.IOSXRExtensibleManagabilityService.CliConfigArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReqid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCli(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.CliConfigArgs} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CliConfigArgs.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.CliConfigArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CliConfigArgs.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getReqid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getCli();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.CliConfigArgs} The clone.
 */
proto.IOSXRExtensibleManagabilityService.CliConfigArgs.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.CliConfigArgs} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 ReqId = 1;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.CliConfigArgs.prototype.getReqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.CliConfigArgs.prototype.setReqid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string cli = 2;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.CliConfigArgs.prototype.getCli = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.CliConfigArgs.prototype.setCli = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.CliConfigReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.CliConfigReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.CliConfigReply.displayName = 'proto.IOSXRExtensibleManagabilityService.CliConfigReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CliConfigReply.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.CliConfigReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.CliConfigReply} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CliConfigReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resreqid: msg.getResreqid(),
    errors: msg.getErrors()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.CliConfigReply}
 */
proto.IOSXRExtensibleManagabilityService.CliConfigReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.CliConfigReply;
  return proto.IOSXRExtensibleManagabilityService.CliConfigReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.CliConfigReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.CliConfigReply}
 */
proto.IOSXRExtensibleManagabilityService.CliConfigReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setResreqid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.CliConfigReply} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CliConfigReply.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.CliConfigReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CliConfigReply.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getResreqid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getErrors();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.CliConfigReply} The clone.
 */
proto.IOSXRExtensibleManagabilityService.CliConfigReply.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.CliConfigReply} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 ResReqId = 1;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.CliConfigReply.prototype.getResreqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.CliConfigReply.prototype.setResreqid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string errors = 2;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.CliConfigReply.prototype.getErrors = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.CliConfigReply.prototype.setErrors = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs.displayName = 'proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqid: msg.getReqid(),
    cli: msg.getCli(),
    yangjson: msg.getYangjson()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs}
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs;
  return proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs}
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReqid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCli(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setYangjson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getReqid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getCli();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getYangjson();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs} The clone.
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 ReqId = 1;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs.prototype.getReqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs.prototype.setReqid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string cli = 2;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs.prototype.getCli = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs.prototype.setCli = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string yangjson = 3;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs.prototype.getYangjson = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.CommitReplaceArgs.prototype.setYangjson = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.CommitReplaceReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.CommitReplaceReply.displayName = 'proto.IOSXRExtensibleManagabilityService.CommitReplaceReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceReply.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.CommitReplaceReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.CommitReplaceReply} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resreqid: msg.getResreqid(),
    errors: msg.getErrors()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.CommitReplaceReply}
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.CommitReplaceReply;
  return proto.IOSXRExtensibleManagabilityService.CommitReplaceReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.CommitReplaceReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.CommitReplaceReply}
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setResreqid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.CommitReplaceReply} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceReply.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceReply.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getResreqid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getErrors();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.CommitReplaceReply} The clone.
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceReply.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.CommitReplaceReply} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 ResReqId = 1;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceReply.prototype.getResreqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.CommitReplaceReply.prototype.setResreqid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string errors = 2;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.CommitReplaceReply.prototype.getErrors = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.CommitReplaceReply.prototype.setErrors = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.CommitMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.CommitMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.CommitMsg.displayName = 'proto.IOSXRExtensibleManagabilityService.CommitMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CommitMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.CommitMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.CommitMsg} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CommitMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: msg.getLabel(),
    comment: msg.getComment()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.CommitMsg}
 */
proto.IOSXRExtensibleManagabilityService.CommitMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.CommitMsg;
  return proto.IOSXRExtensibleManagabilityService.CommitMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.CommitMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.CommitMsg}
 */
proto.IOSXRExtensibleManagabilityService.CommitMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.CommitMsg} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CommitMsg.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.CommitMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CommitMsg.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getComment();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.CommitMsg} The clone.
 */
proto.IOSXRExtensibleManagabilityService.CommitMsg.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.CommitMsg} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.CommitMsg.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.CommitMsg.prototype.setLabel = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string comment = 2;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.CommitMsg.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.CommitMsg.prototype.setComment = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.CommitArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.CommitArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.CommitArgs.displayName = 'proto.IOSXRExtensibleManagabilityService.CommitArgs';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CommitArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.CommitArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.CommitArgs} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CommitArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: (f = msg.getMsg()) && proto.IOSXRExtensibleManagabilityService.CommitMsg.toObject(includeInstance, f),
    reqid: msg.getReqid()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.CommitArgs}
 */
proto.IOSXRExtensibleManagabilityService.CommitArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.CommitArgs;
  return proto.IOSXRExtensibleManagabilityService.CommitArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.CommitArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.CommitArgs}
 */
proto.IOSXRExtensibleManagabilityService.CommitArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.IOSXRExtensibleManagabilityService.CommitMsg;
      reader.readMessage(value,proto.IOSXRExtensibleManagabilityService.CommitMsg.deserializeBinaryFromReader);
      msg.setMsg(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReqid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.CommitArgs} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CommitArgs.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.CommitArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CommitArgs.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getMsg();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.IOSXRExtensibleManagabilityService.CommitMsg.serializeBinaryToWriter
    );
  }
  f = this.getReqid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.CommitArgs} The clone.
 */
proto.IOSXRExtensibleManagabilityService.CommitArgs.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.CommitArgs} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional CommitMsg msg = 1;
 * @return {proto.IOSXRExtensibleManagabilityService.CommitMsg}
 */
proto.IOSXRExtensibleManagabilityService.CommitArgs.prototype.getMsg = function() {
  return /** @type{proto.IOSXRExtensibleManagabilityService.CommitMsg} */ (
    jspb.Message.getWrapperField(this, proto.IOSXRExtensibleManagabilityService.CommitMsg, 1));
};


/** @param {proto.IOSXRExtensibleManagabilityService.CommitMsg|undefined} value  */
proto.IOSXRExtensibleManagabilityService.CommitArgs.prototype.setMsg = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.IOSXRExtensibleManagabilityService.CommitArgs.prototype.clearMsg = function() {
  this.setMsg(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.IOSXRExtensibleManagabilityService.CommitArgs.prototype.hasMsg = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 ReqId = 2;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.CommitArgs.prototype.getReqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.CommitArgs.prototype.setReqid = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.CommitReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.CommitReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.CommitReply.displayName = 'proto.IOSXRExtensibleManagabilityService.CommitReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CommitReply.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.CommitReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.CommitReply} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CommitReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: msg.getResult(),
    resreqid: msg.getResreqid(),
    errors: msg.getErrors()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.CommitReply}
 */
proto.IOSXRExtensibleManagabilityService.CommitReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.CommitReply;
  return proto.IOSXRExtensibleManagabilityService.CommitReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.CommitReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.CommitReply}
 */
proto.IOSXRExtensibleManagabilityService.CommitReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.IOSXRExtensibleManagabilityService.CommitResult} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setResreqid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.CommitReply} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CommitReply.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.CommitReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CommitReply.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getResreqid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = this.getErrors();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.CommitReply} The clone.
 */
proto.IOSXRExtensibleManagabilityService.CommitReply.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.CommitReply} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional CommitResult result = 1;
 * @return {!proto.IOSXRExtensibleManagabilityService.CommitResult}
 */
proto.IOSXRExtensibleManagabilityService.CommitReply.prototype.getResult = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.CommitResult} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.IOSXRExtensibleManagabilityService.CommitResult} value  */
proto.IOSXRExtensibleManagabilityService.CommitReply.prototype.setResult = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 ResReqId = 2;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.CommitReply.prototype.getResreqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.CommitReply.prototype.setResreqid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string errors = 3;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.CommitReply.prototype.getErrors = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.CommitReply.prototype.setErrors = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs.displayName = 'proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqid: msg.getReqid()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs}
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs;
  return proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs}
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReqid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getReqid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs} The clone.
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 ReqId = 1;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs.prototype.getReqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.DiscardChangesArgs.prototype.setReqid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.DiscardChangesReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.DiscardChangesReply.displayName = 'proto.IOSXRExtensibleManagabilityService.DiscardChangesReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesReply.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.DiscardChangesReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.DiscardChangesReply} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resreqid: msg.getResreqid(),
    errors: msg.getErrors()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.DiscardChangesReply}
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.DiscardChangesReply;
  return proto.IOSXRExtensibleManagabilityService.DiscardChangesReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.DiscardChangesReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.DiscardChangesReply}
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setResreqid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.DiscardChangesReply} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesReply.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesReply.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getResreqid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getErrors();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.DiscardChangesReply} The clone.
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesReply.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.DiscardChangesReply} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 ResReqId = 1;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesReply.prototype.getResreqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.DiscardChangesReply.prototype.setResreqid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string errors = 2;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.DiscardChangesReply.prototype.getErrors = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.DiscardChangesReply.prototype.setErrors = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.ShowCmdArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.ShowCmdArgs.displayName = 'proto.IOSXRExtensibleManagabilityService.ShowCmdArgs';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.ShowCmdArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.ShowCmdArgs} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqid: msg.getReqid(),
    cli: msg.getCli()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.ShowCmdArgs}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.ShowCmdArgs;
  return proto.IOSXRExtensibleManagabilityService.ShowCmdArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.ShowCmdArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.ShowCmdArgs}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReqid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCli(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.ShowCmdArgs} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdArgs.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdArgs.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getReqid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getCli();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.ShowCmdArgs} The clone.
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdArgs.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.ShowCmdArgs} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 ReqId = 1;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdArgs.prototype.getReqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.ShowCmdArgs.prototype.setReqid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string cli = 2;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdArgs.prototype.getCli = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.ShowCmdArgs.prototype.setCli = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply.displayName = 'proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resreqid: msg.getResreqid(),
    output: msg.getOutput(),
    errors: msg.getErrors()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply;
  return proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setResreqid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutput(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getResreqid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getOutput();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getErrors();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply} The clone.
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 ResReqId = 1;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply.prototype.getResreqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply.prototype.setResreqid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string output = 2;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply.prototype.getOutput = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply.prototype.setOutput = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string errors = 3;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply.prototype.getErrors = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.ShowCmdTextReply.prototype.setErrors = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply.displayName = 'proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resreqid: msg.getResreqid(),
    jsonoutput: msg.getJsonoutput(),
    errors: msg.getErrors()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply;
  return proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setResreqid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsonoutput(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getResreqid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getJsonoutput();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getErrors();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply} The clone.
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 ResReqId = 1;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply.prototype.getResreqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply.prototype.setResreqid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string jsonoutput = 2;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply.prototype.getJsonoutput = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply.prototype.setJsonoutput = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string errors = 3;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply.prototype.getErrors = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.ShowCmdJSONReply.prototype.setErrors = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.CreateSubsArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.CreateSubsArgs.displayName = 'proto.IOSXRExtensibleManagabilityService.CreateSubsArgs';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.CreateSubsArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.CreateSubsArgs} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqid: msg.getReqid(),
    encode: msg.getEncode(),
    subidstr: msg.getSubidstr()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.CreateSubsArgs}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.CreateSubsArgs;
  return proto.IOSXRExtensibleManagabilityService.CreateSubsArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.CreateSubsArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.CreateSubsArgs}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReqid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEncode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubidstr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.CreateSubsArgs} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsArgs.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsArgs.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getReqid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEncode();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = this.getSubidstr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.CreateSubsArgs} The clone.
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsArgs.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.CreateSubsArgs} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 ReqId = 1;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsArgs.prototype.getReqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.CreateSubsArgs.prototype.setReqid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 encode = 2;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsArgs.prototype.getEncode = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.CreateSubsArgs.prototype.setEncode = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string subidstr = 3;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsArgs.prototype.getSubidstr = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.CreateSubsArgs.prototype.setSubidstr = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.IOSXRExtensibleManagabilityService.CreateSubsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.IOSXRExtensibleManagabilityService.CreateSubsReply.displayName = 'proto.IOSXRExtensibleManagabilityService.CreateSubsReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.IOSXRExtensibleManagabilityService.CreateSubsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.IOSXRExtensibleManagabilityService.CreateSubsReply} msg The msg instance to transform.
 * @return {!Object}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resreqid: msg.getResreqid(),
    data: msg.getData_asB64(),
    errors: msg.getErrors()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.IOSXRExtensibleManagabilityService.CreateSubsReply}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.IOSXRExtensibleManagabilityService.CreateSubsReply;
  return proto.IOSXRExtensibleManagabilityService.CreateSubsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.IOSXRExtensibleManagabilityService.CreateSubsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.IOSXRExtensibleManagabilityService.CreateSubsReply}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setResreqid(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.IOSXRExtensibleManagabilityService.CreateSubsReply} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsReply.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsReply.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getResreqid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = this.getErrors();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.IOSXRExtensibleManagabilityService.CreateSubsReply} The clone.
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsReply.prototype.cloneMessage = function() {
  return /** @type {!proto.IOSXRExtensibleManagabilityService.CreateSubsReply} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 ResReqId = 1;
 * @return {number}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsReply.prototype.getResreqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.IOSXRExtensibleManagabilityService.CreateSubsReply.prototype.setResreqid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bytes data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsReply.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/**
 * optional bytes data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsReply.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsReply.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/** @param {!(string|Uint8Array)} value  */
proto.IOSXRExtensibleManagabilityService.CreateSubsReply.prototype.setData = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string errors = 3;
 * @return {string}
 */
proto.IOSXRExtensibleManagabilityService.CreateSubsReply.prototype.getErrors = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.IOSXRExtensibleManagabilityService.CreateSubsReply.prototype.setErrors = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.IOSXRExtensibleManagabilityService.CommitResult = {
  CHANGE: 0,
  NO_CHANGE: 1,
  FAIL: 2
};

goog.object.extend(exports, proto.IOSXRExtensibleManagabilityService);
